package pt.ipleiria.estg.dei.waypinpoint;

import static pt.ipleiria.estg.dei.waypinpoint.utils.Utilities.ID_CART;
import static pt.ipleiria.estg.dei.waypinpoint.utils.Utilities.getUserId;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;

import java.util.ArrayList;

import Listeners.CartListener;
import Model.Cart;
import Model.SingletonManager;
import Model.WaypinpointDbHelper;

public class CartActivity extends AppCompatActivity implements CartListener {
    private FragmentManager fragmentManager;
    private int quantity;
    private int activityId;
    private String apiHost = null;
    private Cart cart;
    private EditText etQuantity;
    public static final String APIHOST = "APIHOST";
    private Button buttonAddCart;
    private CartListener listener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cart);

        Intent intent = getIntent();
        int activityId = intent.getIntExtra("activity_id", 1);
        String activityName = intent.getStringExtra("activity_name");
        double activityPrice = intent.getDoubleExtra("activity_price", 1.50);
        int id = getIntent().getIntExtra(ID_CART, 0);
        cart = SingletonManager.getInstance(getApplicationContext()).getCart(id);

        etQuantity = findViewById(R.id.textviewQuantity);
        buttonAddCart = findViewById(R.id.buttonAddCart);
        buttonAddCart.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String quantityStr = etQuantity.getText().toString().trim();
                if (isQuantityValid(quantityStr)) {
                    int quantity = Integer.parseInt(quantityStr);
                    Cart newCart = new Cart(
                            0, // ID placeholder; usually generated by the server
                            getUserId(getApplicationContext()), // Replace with actual user ID
                            activityId, // Use passed activity ID
                            quantity,
                            0, // Status placeholder
                            1 // Calendar ID placeholder
                    );
                    SingletonManager.getInstance(getApplicationContext()).addCartApi(newCart, getApplicationContext());
                    Fragment fragment = new CartFragment();
                    Bundle args = new Bundle();
                    args.putInt("quantity", Integer.parseInt(quantityStr)); // Pass quantity as an argument
                    fragment.setArguments(args);

                    fragmentManager = getSupportFragmentManager();
                    fragmentManager.beginTransaction()
                            .replace(R.id.fragment_container_cart, fragment) // Ensure the container ID matches your layout
                            .addToBackStack(null) // Optional: allows navigating back
                            .commit();
                    Toast.makeText(CartActivity.this, "Cart added successfully!", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    public void alfredo() {
//        String input = etQuantity.getText().toString().trim();
//        boolean isQuantityValid;
//        isQuantityValid = isQuantityValid(input);
//        if (isQuantityValid) {
//            int quantity = Integer.parseInt(input);
        try {
            WaypinpointDbHelper dbHelper = new WaypinpointDbHelper(this);
            Cart cartDB = new Cart();
            cartDB.setId(1); // Placeholder ID, usually auto-generated by the server
            cartDB.setUser_id(1); // Replace with the actual user ID if available
            cartDB.setProduct_id(1); // Replace with the actual product ID if available
            cartDB.setQuantity(2);
            cartDB.setStatus(0); // Example placeholder status
            cartDB.setCalendar_id(1); // Placeholder calendar ID
            dbHelper.addCartDb(cartDB);
            //SingletonManager.getInstance(getApplicationContext()).addCartApi(newCart, this);
//
            Toast.makeText(CartActivity.this, R.string.cart_added_successfully, Toast.LENGTH_SHORT).show();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private boolean isQuantityValid(String input) {
        if (input.isEmpty()) {
            etQuantity.setError("Field cannot be empty");
            return false;
        }

        try {
            int quantity = Integer.parseInt(input);
            if (quantity <= 0) {
                etQuantity.setError("Quantity must be greater than 0");
                return false;
            }
        } catch (NumberFormatException e) {
            etQuantity.setError("Invalid quantity");
            return false;
        }
        return true;

    }


    @Override
    public void onSuccess(ArrayList<Cart> carts) {

    }

    @Override
    public void onError(String s) {

    }
}

